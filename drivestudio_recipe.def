Bootstrap: docker
From: nvidia/cuda:11.7.1-devel-ubuntu22.04
Stage: spython-base

%files
./third_party/smplx/* /drivestudio/third_party/smplx/
%post
CUDA_VERSION=11.7.1
OS_VERSION=22.04
# Define base image.


# Variables used at build time.
## CUDA architectures, required by Colmap and tiny-cuda-nn.
## NOTE: Most commonly used GPU architectures are included and supported here. To speedup the image build process remove all architectures but the one of your explicit GPU. Find details here: https://developer.nvidia.com/cuda-gpus (8.6 translates to 86 in the line below) or in the docs.
CUDA_ARCHITECTURES="86;80;75"

# Set environment variables.
## Set non-interactive to prevent asking for user inputs blocking image creation.
DEBIAN_FRONTEND=noninteractive
## Set timezone as it is required by some packages.
TZ=Europe/Berlin
## CUDA Home, required to find CUDA in some packages.
CUDA_HOME="/usr/local/cuda"

# Install required apt packages and clear cache afterwards.
apt-get update && \
apt-get install -y --no-install-recommends \
build-essential 
apt-get update && \
apt-get install -y --no-install-recommends \
cmake \
curl \
ffmpeg \
git \
libatlas-base-dev \
libboost-filesystem-dev \
libboost-graph-dev \
libboost-program-options-dev \
libboost-system-dev \
libboost-test-dev \
libhdf5-dev \
libcgal-dev \
libeigen3-dev \
libflann-dev \
libfreeimage-dev \
libgflags-dev \
libglew-dev \
libgoogle-glog-dev \
libmetis-dev \
libprotobuf-dev \
libqt5opengl5-dev \
libsqlite3-dev \
libsuitesparse-dev \
protobuf-compiler \
python-is-python3 \
python3.10-dev \
python3-pip \
qtbase5-dev \
wget \
&& \
rm -rf /var/lib/apt/lists/*

# Add glog path to LD_LIBRARY_PATH.
LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib"

# Upgrade pip and install packages.
python3.10 -m pip install --no-cache-dir --upgrade pip "setuptools<70.0" pathtools promise pybind11

# Install pytorch and submodules
python3.10 -m pip install --no-cache-dir torch==2.0.0+cu117 torchvision==0.15.0+cu117 --index-url https://download.pytorch.org/whl/cu117


python3.10 -m pip install xformers==0.0.18
python3.10 -m pip install timm==0.9.5
python3.10 -m pip install pytorch_msssim==1.0.0

python3.10 -m pip install omegaconf==2.3.0
python3.10 -m pip install torchmetrics==0.10.3

python3.10 -m pip install tensorboard==2.11.0
python3.10 -m pip install wandb==0.15.8
python3.10 -m pip install matplotlib==3.5.3
python3.10 -m pip install plotly==5.13.1
python3.10 -m pip install viser==0.2.1

python3.10 -m pip install imageio
python3.10 -m pip install imageio-ffmpeg
python3.10 -m pip install scikit-image==0.20.0
python3.10 -m pip install opencv-python

python3.10 -m pip install open3d==0.16.0
python3.10 -m pip install pyquaternion==0.9.9
python3.10 -m pip install chumpy
python3.10 -m pip install numpy==1.23.1
python3.10 -m pip install kornia==0.7.2

python3.10 -m pip install tqdm
python3.10 -m pip install gdown

python3.10 -m pip install nerfview==0.0.3
python3.10 -m pip install lpips==0.1.4

cd /drivestudio/third_party/smplx
python3.10 -m pip install -e .

FORCE_CUDA=1 TORCH_CUDA_ARCH_LIST="8.6 8.0 7.5" python3.10 -m pip install git+https://github.com/nerfstudio-project/gsplat.git@v1.3.0
FORCE_CUDA=1 TORCH_CUDA_ARCH_LIST="8.6 8.0 7.5" python3.10 -m pip install git+https://github.com/facebookresearch/pytorch3d.git
FORCE_CUDA=1 TORCH_CUDA_ARCH_LIST="8.6 8.0 7.5" python3.10 -m pip install git+https://github.com/NVlabs/nvdiffrast
python3.10 -m pip install "git+https://github.com/scaleapi/pandaset-devkit.git#egg=pandaset&subdirectory=python"
python3.10 -m pip install nuscenes-devkit

curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
export PATH="/root/.cargo/bin:${PATH}"

rustup default nightly-2024-02-04
python3.10 -m pip install git+https://github.com/ziyc/av2-api

python3.10 -m pip install numpy==1.23.1
python3.10 -m pip install scipy==1.9.1

# Bash as default entrypoint.
%environment
export DEBIAN_FRONTEND=noninteractive
export TZ=Europe/Berlin
export CUDA_HOME="/usr/local/cuda"
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib"
export TORCH_CUDA_ARCH_LIST="8.6 8.0 7.5"
export PATH="/root/.cargo/bin:${PATH}"
%runscript
cd /drivestudio
exec /bin/bash /bin/bash -l "$@"
%startscript
cd /drivestudio
exec /bin/bash /bin/bash -l "$@"